#summary Planned development milestones for the IAML plugin
#labels Featured,Phase-QA

=Introduction=
The development of this [Development IAML Eclipse plugin] is based on an iterative approach. In particular, large iterations (minor versions) which are then broken down into smaller iterations (revisions, spikes). These iterations are also designed to be synchronised with my [http://journals.jevon.org/users/jevon-phd PhD]. 

I hope to also use [http://c2.com/cgi/wiki?TestDrivenDevelopment Test Driven Development] significantly in order to test and validate the majority of the plugin. Though I'm not yet sure how to test the usability of Eclipse :)

<wiki:toc max_depth="2" />

=Release 0.1=
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.1 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/16760 Released] November 2008)
  # [Model0_1 Initial IAML model] that can describe initial requirements
  # Usability improvements
    * Display shortcut elements for referenced elements
  # Look into rule engines for element inference
  # Testing
    * Initial testing of code generation
    * Initial testing of element inference
    * Testing of plugin structure
  # Code generation 
    * Basic HTML/PHP genereation
  # Set up [Installation update site]

=Release 0.2=
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.2 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19062 Released] April 2009)
  # [Milestones Publish milestones]
  # [Model0_2 Expand IAML model]
    * All basic model elements can be placed in a diagram 
    * Inference and code generation tests
  # Code generation
    * Clean up structure of code generation plugin
    * Operation deep chaining ([http://code.google.com/p/iaml/source/detail?r=563 r563])
    * Can generate all elements of the [Model0_2 initial requirements]
  # Testing
    * Test operational modelling and generation
    * Test cases for code generation of all modelling elements

=Release 0.3=
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.3 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19718 Released] July 2009)
  # [Model0_3 Expand IAML model]
    * [IamlOperations Document existing atomic operations]
    * [IamlCompositeOperations Document existing composite operations]
  # Inference
    * [ModelInference Queue-based knowledge inference] - to be detailed in upcoming paper
    * Infer directly-contained model elements
    * [http://code.google.com/p/iaml/wiki/Model0_3#Usability_Features Inference actions] available through right-click
  # Code generation
    * Session persistence within multiple remote calls ([http://code.google.com/p/iaml/source/detail?r=586 r586])
    * Generated code is cleaned with the [http://code.google.com/p/iacleaner/ iacleaner] formatter ([http://code.google.com/p/iaml/issues/detail?id=13 issue 13])
  # [Model0_3 Testing and Documentation]
    * Sessions
    * Buttons
    * Operation modelling
    * Condition modelling
    * Domain objects, domain object instances
    * [LoginHandler Login handlers (secret key)]
    * Select wires
    * New instance wires
  # Editor
    * Create edges from shortcut elements not directly contained ([http://code.google.com/p/iaml/issues/detail?id=34 issue 34])
    * Render shortcut elements and edges not directly contained ([http://code.google.com/p/iaml/issues/detail?id=47 issue 47])
  # Usability improvements
    * [ModelMigration Can migrate models between different versions]
    * Render model diagram to PNG images ([http://code.google.com/p/iaml/issues/detail?id=9 issue 9])
    * Progress monitors for inference and code generation ([http://code.google.com/p/iaml/issues/detail?id=23 issue 23])
    * [http://code.google.com/p/iaml/wiki/Model0_3#Generated_Elements Deletion of generated elements semantics] ([[http://code.google.com/p/iaml/issues/detail?id=29 issue 29])
  # Development
    * [http://code.google.com/p/iaml/source/browse/#svn/trunk/org.openiaml.model.codegen.oaw/instrument/output Investigations into model-driven code coverage]

==Release 0.3.1==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.3.1 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19722 Released] July 2009)
  # Upgrade editor to Eclipse 3.5/GMF 2.2 ([http://code.google.com/p/iaml/issues/detail?id=50 issue 50])
  # Usability improvements
    * More icons for editor elements ([http://code.google.com/p/iaml/issues/detail?id=18 issue 18])
    * Model element creation tools are now rendered in groups

=Release 0.4=
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.4 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19760 Released] October 2009)
  # [Model0_4 Expand IAML model]
    * [http://openiaml.org/model/LoginHandler Login Handlers] (domain instance and user)
    * [http://code.google.com/p/iaml/source/detail?r=973 Clear the current session DomainObjectInstance]
    * [http://openiaml.org/model/SetWire Set Wire]: a one-way _Sync Wire_
    * [http://openiaml.org/model/QueryParameter Query Parameter] (_url?param=bar_)
    * [http://openiaml.org/model/Role Users as first-class citizens]
    * [http://openiaml.org/model/JoinNode Join Node], [http://openiaml.org/model/SplitNode Split Node]
    * [Model0_4 ...]
  # Documentation
    * [http://openiaml.org/model Automatically generated documentation]
    * [Installation Installation guide]
    * [HelloWorld "Hello, World" tutorial]
    * Rich suite of [http://openiaml.org/model/examples example models]
  # Usability improvements
    * Differences between [IamlPrimitiveOperations primitive operations] and [IamlCompositeOperations composite operations] have been clarified
    * Model instances will be checked for validity before code generation occurs
    * Debug information is no longer displayed by default (issue 115)
  # Development
    * PHP and Javascript libraries moved into a separate runtime bundle (issue 75, issue 76)
    * Refactoring of code generation templates
    * Diagram tests moved into separate bundle (issue 109)

==Release 0.4.1==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.4.1 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19777 Released] December 2009)
  # [http://code.google.com/p/iaml/wiki/Model0_5#Model_0.4.1 Expand IAML model]
    * Arithmetic
  # Code generation
    * Operational modelling is now implemented using a call stack, allowing for loops in the execution path

==Release 0.4.2==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.4.2 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19798 Released] February 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_5#Model_0.4.2 Expand IAML model]
    * EntryGate: restricting entry through a given gate
    * ExitGate: restricting exit through a given gate
    * "Page" is now "Frame"
  # Code generation
    * Conditional modelling is also now implemented using the same call stack in 0.4.1

==Release 0.4.3==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.4.3 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19803 Released] February 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_5#Model_0.4.3 Expand IAML model]
    * Label: a static text field that cannot be edited by the user
    * An InputForm connected by a SetWire will be rendered with Labels, rather than InputTextFields (r1511)
    * DomainObjectInstance autosave default should be false (r1512)
    * Some metamodel refactoring: Not all edges are now wires

==Release 0.4.4==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.4.4 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19812 Released] March 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_5#Model_0.4.4 Expand IAML model]
    * Data types using XML Schema (XSD)
    * CastNode: an operational modelling node that allows one data value to be cast to another type
  # Inference
    * InputTextFields now automatically have a Label called "Warning"
  # Code generation
    * Operations and conditions are now generated as individual include files
    * Test cases are now correctly synchronised with AJAX calls (issue 43)

=Release 0.5=
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.5 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19824 Released] April 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_5#Model_0.5 Expand IAML model]
    * Google Maps through [http://openiaml.org/model/Map Map] and [http://openiaml.org/model/MapPoint MapPoint]
    * E-mails through [http://openiaml.org/model/Email Email]
    * Navigating through [http://openiaml.org/model/DomainObjectInstance DomainObjectInstance] and [http://openiaml.org/model/SelectWire SelectWire]
    * Added documentation for all model element classes (issue 167)
  # Inference
    * Wrote documentation about [ModelCompletion]
    * Automatically mark containers as overridden (issue 130)
    * Overridden flag is ignored (issue 131)
  # Usability improvements
    * Highlight overridden elements in bold (issue 162)
    * [http://openiaml.org/model/EventTrigger Events] are now rendered as UML events (issue 93)
  # Code generation
    * Operations and conditions that are never used are no longer generated (issue 169)
  # Development
    * `generateID()` code is automatically inserted into model code using EMF Dynamic Templates (issue 165)

==Release 0.5.1==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.5.1 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19835 Released] May 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_6#Model_0.5.1 Expand IAML model]
    * OpenID is supported through a new data type
    * [http://openiaml.org/model/EntryGate EntryGate] can require a provided OpenID value
    * RSS Feeds can be produced using a [http://openiaml.org/model/Frame Frame]
    * RSS Feeds can be consumed using a [http://openiaml.org/model/DomainSource DomainSource]
    * Refactoring of Domain Modelling elements (issue 178)
    * DecisionOperation and DecisionCondition merged into DecisionNode (issue 160)
    * CompositeWire and SingleWire removed (issue 189)
    * FieldValue properties are now stored in an explicit containment reference (issue 170)
  # Code generation
    * A new domain modelling runtime framework (issue 178), which improves code generation time significantly
    * Various performance and size improvements to code generation
  # Development
    * Diagram editors are now completely removed from version control (issue 175)
  # Documentation
    * The documentation has not been fully migrated yet, nor all of the example models migrated yet, but this will be completed before 0.6.

==Release 0.5.2==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.5.2 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19848 Released] July 2010)
  # [http://code.google.com/p/iaml/wiki/Model0_6#Model_0.5.2 Expand IAML model]
    * Added [http://openiaml.org/model/AutcompleteWire Autocomplete Wire]
    * Added instant [http://openiaml.org/model/SyncWire SyncWires] using the new _onInput_/_currentInput_ event and property
    * [http://openiaml.org/model/DomainIterator DomainIterators] and [http://openiaml.org/model/InputForm InputForm] no longer have _fieldValues_ created through model completion.
  # Interface 
    * The visual display of elements has been refreshed and unified, according to Moody's _Physics of Notation_ (issue 195)
  # Documentation
    * The element export script now also exports to SVG, as well as PNG (issue 193)
    * The documentation has not been fully migrated yet, nor all of the example models migrated yet, but this will be completed before 0.6.

==Release 0.5.3==
([http://code.google.com/p/iaml/issues/list?can=1&q=label%3AMilestone-Release0.5.3 Resolved issues])
([http://journals.jevon.org/users/jevon-phd/entry/19886 Released] January 2011)
  # [http://code.google.com/p/iaml/wiki/Model0_6#Model_0.5.3 Various fixes]
    * Various performance improvements
  # Documentation
    * Wrote up a list of sample representations of user interface elements in [InterfaceElements]

=Release 0.6=
([http://code.google.com/p/iaml/issues/list?can=2&q=label%3AMilestone-Release0.6 Outstanding issues])
  # [Model0_6 Expand IAML model]
    * Instant SetWires
  # Code generation
    * Improve performance of multiple include files on client-side
  # Documentation
    * Update example models to refactored domain modelling
    * Generate completed models for all example models

=Release 0.7+=
([http://code.google.com/p/iaml/issues/list?can=2&q=label%3AMilestone-Release0.7 Outstanding issues])
  # [Model0_7 Expand IAML model]
    * Captchas
    * Rich Text
    * Use Web Services
    * Delete Domain Object

=Release 0.9=
  # Can implement [http://openiaml.org Ticket 2.0]

=Release 1.0=
  # Focus on Usability
  # Implement code generation in another language (JSP?)
  # Extensibility