#summary Project properties information and reference.
#labels EndUser,Phase-Deploy

=Introduction=

Platform-specific project properties can be specified in an IAML project; a detailed editor will be provided with issue 87.

The creation of these properties will be detailed later, but essentially an `iaml.properties` file, that is in the same folder as the `.iaml` model, will be read at generation time.

For properties that are not specified, the default properties are specified in [http://code.google.com/p/iaml/source/browse/trunk/org.openiaml.model/src/org/openiaml/model/codegen/DefaultRuntimeProperties.java DefaultRuntimeProperties.java].

==include_runtime==

If this is set to *true* (the default), the runtime libraries will be included directly in the generated code output. It will also modify _config_runtime_ and _config_web_ properties to reflect these new properties.

This was added in issue 81 and implemented in the extension [http://code.google.com/p/iaml/source/browse/trunk/org.openiaml.model.codegen.oaw/src/org/openiaml/model/codegen/oaw/OawCodeGeneratorWithRuntime.java?spec=svn889&r=889 OawCodeGeneratorWithRuntime.java].

==config_runtime==

A string pointing to the server-side runtime libraries: issue 75. This is implemented at runtime by creating a _config.php_ configuration file at runtime, and referencing it as follows ([http://code.google.com/p/iaml/source/detail?r=894 example]):

{{{
<?php require(IAML_RUNTIME_ROOT."global.php"); ?>
}}}

==config_web==

A string pointing to the client-side runtime libraries: issue 76. This is implemented at runtime through:

{{{
<script language="Javascript" type="text/javascript" src="<?php echo IAML_RUNTIME_WEB; ?>js/default.js"></script>
}}}

==debug==

If set to "true", debug information will be rendered as part of the generate code. Until issue 137 is resolved, this only affects the rendering of debug code; it is still generated, just not displayed.

{{{
<?php if (DEBUG) { ... } ?>
}}}

==email_handler==

The handler used to send [http://openiaml.org/model/Email e-mail]. In the future, this will include configuration for `mail()`, PHPMailer, direct SMTP, etc. Currently, the following e-mail handlers are supported:

  * `phpmailer`: Use [PHPMailer]
  * `file`: Send to a text file

==email_handler_phpmailer_include==

Location of the [PHPMailer] include files.

==email_handler_file_destination==

If `email_handler` is set to `file`, this is the destination text file that [http://openiaml.org/model/Email e-mails] will be written to.

The target file will be a Java Properties file, in the following format:

{{{
size=5
email.0.from=source@openiaml.org
email.0.to=to@openiaml.org.
email.0.subject=subject
email.0.content=e-mail content
email.1.from=source@openiaml.org
...
}}}