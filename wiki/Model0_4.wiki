#summary Summary of model version 0.4.
#labels Phase-Design,Development

[Model0_3 < 0.3] | *0.4* | [Model0_5 0.5 >]

=Model 0.4=

<wiki:toc max_depth="2" />

=Introduction=

TODO

=New Elements=
==Login Handler (Domain Instance)==

A [http://openiaml.org/model/LoginHandler login handler] can now be connected to login [http://openiaml.org/model/DomainObjectInstance domain object instances]. This will login or logout the current user based on the existance of a valid domain instance in the [http://openiaml.org/model/DomainStore domain store].

  _See [http://openiaml.org/model/LoginHandler]_

==Login Handler (User Instance)==

A [http://openiaml.org/model/LoginHandler login handler] can now be connected to login [http://openiaml.org/model/UserInstance user instances]. This will login or logout the current user based on the existance of a valid user in the [http://openiaml.org/model/UserStore user store].

  _See [http://openiaml.org/model/LoginHandler]_

==Join Node, Split Node==

A Split Node will split the execution of an operation; a Join Node is required to unify the execution back.

  _See [http://openiaml.org/model/SplitNode], [http://openiaml.org/model/JoinNode]_

==Query Parameter==

Represents a parameter taken from the current request query.

  _See [http://openiaml.org/model/QueryParameter]_

==User Store==

Contains the definition of users; in particular, [http://openiaml.org/model/Role roles] and [http://openiaml.org/model/Permission permissions].

  _See [http://openiaml.org/model/UserStore]_

==User Instance==

Represents an instance of a user, most commonly the currently [http://openiaml.org/model/LoginHandler logged in user].

  _See [http://openiaml.org/model/UserInstance]_

==Role==

User instances can have one or many roles, which can be inherited. Roles can also provide [http://openiaml.org/model/Permission permissions]. This is an implementation of Role-Based Access Control.

  _See [http://openiaml.org/model/Role]_

==Permission==

User instances can have any number of permissions, which can be added or removed at any time.

  _See [http://openiaml.org/model/Permission]_

==Access Control Handler==

Restricts access to a Page or Session based on the required Roles or Permissions.

  _See [http://openiaml.org/model/AccessControlHandler]_

==Undocumented==

  * OperationCallNode

Documentation forthcoming.

=New Wires=
==Set Wire==

Keeps a target value up-to-date with a source value in a unidirectional fashion.

  _See [http://openiaml.org/model/SetWire]_

==Extends Wire==

Allows for [http://openiaml.org/model/DomainObject domain objects] and [http://openiaml.org/model/Role roles] to inherit each other. Supports limited multiple inheritance.

  _See [http://openiaml.org/model/ExtendsWire]_

==Provides Wire==

Indicates that the given [http://openiaml.org/model/Role user role] by default will provide the connected [http://openiaml.org/model/Permission permissions].

  _See [http://openiaml.org/model/ProvidesWire]_

==Requires Wire==

Indicates that the given [http://openiaml.org/model/AccessControlHandler access control handler] requires the given [http://openiaml.org/model/Role role] or [http://openiaml.org/model/Permission permission].

  _See [http://openiaml.org/model/RequiresWire]_

==Constraint Wire==

Allows for the complex construction of [http://openiaml.org/model/RequiresWire requirements] for an [http://openiaml.org/model/AccessControlHandler access control handler].

In the future this will allow the complex construction of [http://openiaml.org/model/ConditionWire conditions] ([http://code.google.com/p/iaml/issues/detail?id=134 issue 134]).

  _See [http://openiaml.org/model/ConstraintWire]_